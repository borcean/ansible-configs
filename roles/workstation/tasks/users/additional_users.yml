- name: Additional users | Copy profile image | {{ item.key }}
  ansible.builtin.copy:
    src: users/profile_images/{{ item.key }}.png
    dest: "/var/lib/AccountsService/icons/{{ item.key }}"
    owner: root
    group: root
    mode: '0644'

- name: Additional users | Check if user has logged in before | {{ item.key }}
  ansible.builtin.stat:
    path: "/var/lib/AccountsService/users/{{ item.key }}"
  register: p

- name: Additional users | Create AccountsService/users/username | {{ item.key }}
  ansible.builtin.copy:
    src: users/AccountsService_user
    dest: "/var/lib/AccountsService/users/{{ item.key }}"
    owner: root
    group: root
    mode: '0600'
  when: p.stat.isreg is not defined

- name: Additional users | Set profile image | {{ item.key }}
  ansible.builtin.lineinfile:
    path: "/var/lib/AccountsService/users/{{ item.key }}"
    regexp: '^Icon='
    line: "Icon=/var/lib/AccountsService/icons/{{ item.key }}"

- name: Additional users | Flatpak | Add Flathub remote | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.flatpak_remote:
    name: flathub
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
    method: user
    state: present


- name: Additional users | Flatpak | Install Google Chrome | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.flatpak:
    name: com.google.Chrome
    remote: flathub
    method: user

- name: Additional users | Create ~/.config directory | {{ item.key }}
  ansible.builtin.file:
    path: "/home/{{ item.key }}/.config"
    state: directory
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: '0700'

- name: Additional users | create ~/.config/autostart directory | {{ item.key }}
  ansible.builtin.file:
    path: "/home/{{ item.key }}/.config/autostart"
    state: directory
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: '0755'


- name: Additional users | Enable Chrome autostart | {{ item.key }}
  ansible.builtin.file:
    src: "/home/{{ item.key }}/.local/share/flatpak/app/com.google.Chrome/current/active/export/share/applications/com.google.Chrome.desktop"
    dest: "/home/{{ item.key }}/.config/autostart/com.google.Chrome.desktop"
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    state: link

# GNOME config
- name: Additional users | GNOME | Enable natural scrolling (mouse) | {{ item.key }}
  become: true
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/desktop/peripherals/mouse/natural-scroll"
    value: "true"

- name: Additional users | GNOME | Enable natural scrolling (touchpad) | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/desktop/peripherals/touchpad/natural-scroll"
    value: "true"

- name: Additional users | GNOME | Enable tap to click (touchpad) | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/desktop/peripherals/touchpad/tap-to-click"
    value: "true"

- name: Additional users | GNOME | enable two finger scrolling  (touchpad) | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/desktop/peripherals/touchpad/two-finger-scrolling-enabled"
    value: "true"

- name: Additional users | GNOME | Read favorite apps | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/shell/favorite-apps"
    state: read
  register: favorite_apps

- name: Additional users | GNOME | Set favorite apps (Fedora) | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/shell/favorite-apps"
    value: "['google-chrome.desktop', 'org.gnome.Calendar.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Software.desktop']"
  when:
    - ansible_distribution == "Fedora"
    - not favorite_apps.value

- name: Additional users | GNOME | Disable ABRT notifications (Red Hat) | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/desktop/notifications/application/org-freedesktop-problems-applet/enable"
    value: "false"
  when: ansible_os_family == "RedHat"

- name: Additional users | GNOME | Enable location services | {{ item.key }}
  become_user: "{{ item.key }}"
  community.general.dconf:
    key: "/org/gnome/system/location/enabled"
    value: "true"
