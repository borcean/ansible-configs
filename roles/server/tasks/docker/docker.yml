- name: Load vpn credentials variables
  ansible.builtin.include_vars: vpn_credentials.yml

- name: Docker | Install required packages
  ansible.builtin.package:
    state: present
    name:
      - "{{ docker_package }}"
      - "{{ docker_compose_package }}"

- name: Docker | Install docker-compose-switch (openSUSE Tumbleweed)
  ansible.builtin.package:
    state: present
    name: docker-compose-switch
  when: ansible_distribution == "openSUSE Tumbleweed"

- name: Docker | Ensure group exists
  ansible.builtin.group:
    name: docker
    state: present

- name: Docker | Add jeffrey to docker group
  ansible.builtin.user:
    name: jeffrey
    groups: docker
    append: true

- name: Docker | Enable docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Docker | Create folder for docker data
  ansible.builtin.file:
    path: "{{ docker_setting.data_dir }}"
    state: directory
    owner: '1000'
    group: '1000'
    mode: '0755'

- name: Docker | Create directories
  ansible.builtin.file:
    path: '/{{ zfs_pool.pool_name }}/docker/{{ item.dir }}'
    state: directory
    owner: '1000'
    group: '1000'
    mode: '0755'
  with_items:
    - { dir: 'data/config' }
    - { dir: 'compose' }

- name: Docker | Setup docker .env file
  ansible.builtin.template:
    src: docker/env.j2
    dest: '/{{ zfs_pool.pool_name }}/docker/compose/.env'
    owner: '1000'
    group: '1000'
    mode: '0644'

- name: Docker | Copy docker-compose.yml
  ansible.builtin.template:
    src: docker/compose.yml
    dest: '/{{ zfs_pool.pool_name }}/docker/compose/docker-compose.yml'
    owner: '1000'
    group: '1000'
    mode: '0644'

- name: Docker | Check docker compose version
  ansible.builtin.command: docker-compose --version
  register: cmd_dcv
  changed_when: false

- name: Docker | Set docker compose version fact
  ansible.builtin.set_fact:
    compose_version: "{{ cmd_dcv.stdout | regex_search('([0-9])') | first }}"

- name: Docker | Start services - compose plugin
  ansible.builtin.command: docker compose up -d
  args:
    chdir: '/{{ zfs_pool.pool_name }}/docker/compose'
  register: cmd_dcu
  changed_when: '"Start" in cmd_dcu.stderr'
  when: compose_version is version('2', '>=')

- name: Docker | Start services - compose legacy
  ansible.builtin.command: docker-compose up -d
  args:
    chdir: '/{{ zfs_pool.pool_name }}/docker/compose'
  register: cmd_dcu
  changed_when: '"Start" in cmd_dcu.stderr'
  when: compose_version is version('1', '=')

- name: Docker | Set compose binary fact
  ansible.builtin.set_fact:
    docker_compose_binary: docker-compose
  when: compose_version is version('1', '=')

- name: Docker | Install container maintenance systemd service
  ansible.builtin.template:
    src: docker/container_maintenance.j2
    dest: /etc/systemd/system/docker-container-maintenance.service
    owner: root
    group: root
    mode: 0640

- name: Docker | Install container maintenance timer
  ansible.builtin.copy:
    src: docker/container_maintenance.timer
    dest: /etc/systemd/system/docker-container-maintenance.timer
    owner: root
    group: root
    mode: 0640

- name: Docker | Enable container maintenance
  ansible.builtin.systemd:
    name: docker-container-maintenance.timer
    enabled: true
    masked: false
    daemon_reload: true