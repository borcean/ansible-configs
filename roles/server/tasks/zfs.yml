- name: server | zfs | add filesystems repo (opensuse tumbleweed)
  community.general.zypper_repository:
    repo: 'https://download.opensuse.org/repositories/filesystems/openSUSE_Tumbleweed/filesystems.repo'
    auto_import_keys: yes
  notify:
    - zypper_refresh
  when: ansible_distribution == "openSUSE Tumbleweed"

- name: server | zfs | add filesystems repo (opensuse leap)
  community.general.zypper_repository:
    repo: "https://download.opensuse.org/repositories/filesystems/$releasever/filesystems.repo"
    auto_import_keys: yes
  notify:
    - zypper_refresh
  when: ansible_distribution == "openSUSE Leap"

- name: trigger package cache refresh if needed
  meta: flush_handlers

- name: server | zfs | install zfs package
  tags: packages,system,settings
  package:
    state: present
    name:
      - "{{ zfs_package }}"
  notify:
    - load_zfs_kmod
  when: zfs_package is defined

- name: load zfs kernel module if needed
  meta: flush_handlers

- name: server | zfs | gather space usage about all imported zfs pools
  community.general.zpool_facts: properties='free,size'

- name: server | zfs | print gathered information
  ansible.builtin.debug:
    msg: 'ZFS pool {{ item.name }} has {{ item.free }} free space out of {{ item.size }}.'
  with_items: '{{ ansible_zfs_pools }}'

- ansible.builtin.debug: msg='ZFS pool {{ item.name }} exists? -> [{{ item.name == zfs.poolName }}] It has {{ item.free }} free space out of {{ item.size }}.'
  with_items: '{{ ansible_zfs_pools }}'

- name: server | zfs | create zfs pool '{{zfs.poolName}}' as two disk mirror
  ansible.builtin.command: 'zpool create -o ashift=12 {{zfs.poolName}} mirror {{zfs.DISK1}} {{zfs.DISK2}}'
  when: 'not (ansible_zfs_pools|length > 0 and ansible_zfs_pools[0].name == zfs.poolName)'