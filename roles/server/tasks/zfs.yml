- name: ZFS | Add filesystems repo (openSUSE MicroOS)
  community.general.zypper_repository:
    repo: 'https://download.opensuse.org/repositories/filesystems/openSUSE_Tumbleweed/filesystems.repo'
    auto_import_keys: true
  notify:
    - zypper_refresh
  when: ansible_distribution == "openSUSE MicroOS"

- name: Trigger package cache refresh if needed
  ansible.builtin.meta: flush_handlers

- name: ZFS | Install zfs
  ansible.builtin.package:
    state: present
    name:
      - "{{ zfs_package }}"
  when: zfs_package is defined

- name: ZFS | Install zfs-kmp
  ansible.builtin.package:
    state: present
    name:
      - "{{ zfs_kmp_package }}"
  when: zfs_kmp_package is defined

- name: ZFS | Check install state
  ansible.builtin.shell: command -v zfs
  register: check_binary
  changed_when: false
  failed_when: false

- name: Print when binary not found
  ansible.builtin.debug:
    msg:
      - 'Binary  "{{ check_binary.cmd.split()[2] }}" not found'
      - 'A reboot may be needed for pending transactional installs'
  when: check_binary.rc != 0

- name: Create file backed disks for testing
  community.general.filesize:
    path: "/var/{{ item }}.raw"
    size: 10G
    sparse: true
  loop:
    - disk0
    - disk1
  when:
    - test_system is defined
    - test_system | bool

- name: ZFS | Load kernel module
  community.general.modprobe:
    name: zfs
    state: present
  when: check_binary.rc == 0

- name: ZFS | Import zpool
  ansible.builtin.command: zpool import -d '{{ zfs_pool.disk1 }}'-part1 '{{ zfs_pool.pool_name }}'
  register: result
  failed_when: false
  changed_when: result.rc == 0
  when: check_binary.rc == 0

- name: ZFS | Gather space usage about all imported zfs pools
  community.general.zpool_facts: properties='free,size'
  when: check_binary.rc == 0

- name: ZFS | Print gathered information (debug)
  ansible.builtin.debug:
    msg: 'ZFS pool {{ item.name }} has {{ item.free }} free space out of {{ item.size }}.'
  with_items: '{{ ansible_zfs_pools }}'
  when: check_binary.rc == 0

- name: ZFS | Print information about zfs pools (debug)
  ansible.builtin.debug:
    msg: 'ZFS pool {{ item.name }} exists? -> [{{ item.name == zfs_pool.pool_name }}] It has {{ item.free }} free space out of {{ item.size }}.'
  with_items: '{{ ansible_zfs_pools }}'
  when: check_binary.rc == 0

- name: ZFS | Create zfs pool "{{ zfs_pool.pool_name }}" as two disk mirror
  ansible.builtin.command: 'zpool create -o ashift=12 -m /var/"{{  zfs_pool.pool_name }}" "{{ zfs_pool.pool_name }}" mirror "{{ zfs_pool.disk1 }}" "{{ zfs_pool.disk2 }}"'
  when:
    - check_binary.rc == 0
    - 'not (ansible_zfs_pools | length > 0 and ansible_zfs_pools[0].name == zfs_pool.pool_name)'

- name: ZFS | Create filesystems
  community.general.zfs:
    name: '{{ zfs_pool.pool_name }}/{{ item.fs_name }}'
    state: present
  with_items:
    "{{ zfs_filesystems }}"
  when: check_binary.rc == 0

- name: ZFS | Enable weekly scub
  ansible.builtin.systemd:
    name: "zfs-scrub-weekly@{{ zfs_pool.pool_name }}.timer"
    enabled: true
  when: check_binary.rc == 0
