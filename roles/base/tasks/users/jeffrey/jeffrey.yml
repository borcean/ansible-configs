- name: users | jeffrey | set full name
  tags: users,jeffrey
  user:
    name: jeffrey
    comment: Jeffrey Borcean

- name: users | jeffrey | create .ssh directory
  tags: dotfiles,jeffrey,ssh,users
  file:
    path: "{{ item.dir }}"
    state: directory
    owner: jeffrey
    group: "{{ user_group_name | default('jeffrey') }}"
    mode: 0700
  with_items:
    - { dir: '/home/jeffrey/.ssh' }

- name: users | jeffrey | add public key to authorized_keys
  tags: dotfiles,jeffrey,ssh,ssh-keys,users
  authorized_key:
    user: jeffrey
    key: "{{ item }}"
  with_file:
    - users/jeffrey/ssh/id_rsa.pub
    - users/jeffrey/ssh/id_ed25519.pub

- name: users | jeffrey | add public key
  tags: dotfiles,jeffrey,ssh,ssh-keys,users
  copy:
    src: users/jeffrey/ssh/{{ item.key }}.pub
    dest: /home/jeffrey/.ssh/{{ item.key }}.pub
    owner: jeffrey
    group: "{{ user_group_name | default('jeffrey') }}"
    mode: 0644
  with_items:
    - { key: 'id_rsa' }
    - { key: 'id_ed25519' }

- name: users | jeffrey | add private key
  tags: dotfiles,jeffrey,ssh,ssh-keys,users,ansible-vault
  copy:
    src: users/jeffrey/ssh/{{ item.key }}
    dest: /home/jeffrey/.ssh/{{ item.key }}
    owner: jeffrey
    group: "{{ user_group_name | default('jeffrey') }}"
    mode: 0600
  with_items:
  - { key: 'id_rsa' }
  - { key: 'id_ed25519' }

- name: users | jeffrey | create config directories
  tags: dotfiles,fish,jeffrey,users
  file:
    path: /home/jeffrey/{{ item.dir }}
    state: directory
    owner: jeffrey
    group: "{{ user_group_name | default('jeffrey') }}"
    mode: 0700
  with_items:
    - { dir: '.config' }
    - { dir: '.config/fish' }

- name: users | jeffrey | copy dotfiles
  tags: dotfiles,users,jeffrey,fish,vim
  copy:
    src: users/jeffrey/{{ item.src }}
    dest: /home/jeffrey/{{ item.dest }}
    owner: jeffrey
    group: "{{ user_group_name | default('jeffrey') }}"
    mode: 0600
  with_items:
    - { src: 'fish/configfish', dest: '.config/fish/config.fish' }
    - { src: 'git/gitconfig', dest: '.gitconfig' }
    - { src: 'vim/vimrc', dest: '.vimrc' }

# Fish shell configuration
- name: users | jeffrey | set fish shell
  tags: users,jeffrey,fish
  user:
    name: jeffrey
    shell: /usr/bin/fish

- name: users | jeffrey | check if oh-my-fish is installed
  stat:
    path: '/home/jeffrey/.config/fish/conf.d/omf.fish'
  register: omf

- name: users | jeffrey | check if bobthefish is installed
  stat:
    path: '/home/jeffrey/.local/share/omf/themes/bobthefish'
  register: bobthefish

- name: users | jeffrey | clone oh-my-fish repo
  git:
    repo: 'https://github.com/oh-my-fish/oh-my-fish'
    dest: '/tmp/omf'
    version: master
    clone: yes
  when: not omf.stat.exists

- name: users | jeffrey | install oh-my-fish
  become: true
  become_user: jeffrey
  command: /tmp/omf/bin/install -y --offline --noninteractive
  when: not omf.stat.exists

- name: users | jeffrey | install bobthefish
  become: true
  become_user: jeffrey
  command: fish -c 'omf install bobthefish'
  when: not bobthefish.stat.exists

- name: users | jeffrey | update oh-my-fish
  become: true
  become_user: jeffrey
  command: fish -c 'omf update'
  changed_when: false
  when: omf.stat.exists

- import_tasks: gpg.yml

- include_tasks: weechat.yml
  when: weechat | bool